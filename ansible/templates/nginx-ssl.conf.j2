# Nginx SSL Configuration Template
# Uses certificates generated by Vault PKI secrets engine

server {
    listen 443 ssl http2;
    server_name {{ domain_name }};

    # SSL configuration using Vault-generated certificates
    ssl_certificate /etc/ssl/certs/{{ app_name }}.crt;
    ssl_certificate_key /etc/ssl/private/{{ app_name }}.key;
    
    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    
    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Root directory
    root /var/www/html;
    index index.html index.htm;

    # Vault information endpoint (for demo purposes)
    location /vault-info {
        default_type application/json;
        return 200 '{"status": "Certificate issued by Vault PKI", "cn": "{{ domain_name }}", "issuer": "Vault Intermediate CA"}';
    }

    # Default location
    location / {
        try_files $uri $uri/ =404;
    }

    # Security: Hide server information
    server_tokens off;
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name {{ domain_name }};
    return 301 https://$server_name$request_uri;
}
